package Prelude;

class interface String {
    to_int() -> Integer {
    }
    isInt() -> Boolean {
    }
}
class interface Integer {
}
class Integer64 < Integer {
}
class Integer32 < Integer {
}
//enum
class
 Boolean {
//    True, False
}
alias SystemInteger = Integer64
alias Integer = SystemInteger

namespace {
    val ExitSuccess = 0
    val ExitFailure = 1
}

class interface IPrintable {
    // TODO forgot what to put here
    printable() -> String {}
}

namespace {
    print (a: IPrintable) {
    }
    println (a: IPrintable) {
    }
}

class Arguments {
    arguments()-> SystemInteger {
    }
    argument(n: SystemInteger) -> String {
    }
}

/*type*/ alias u64 = Integer64

//
//
//
