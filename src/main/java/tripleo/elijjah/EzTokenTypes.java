// $ANTLR 2.7.7 (20060906): "ez.g" -> "EzParser.java"$

  package tripleo.elijjah;

public interface EzTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int LITERAL_program = 4;
	int LITERAL_library = 5;
	int LITERAL_shared = 6;
	int IDENT = 7;
	int LITERAL_end = 8;
	int LITERAL_lib = 9;
	int LITERAL_libraries = 10;
	int TOK_COLON = 11;
	int STRING_LITERAL = 12;
	int LBRACK = 13;
	int RBRACK = 14;
	int LITERAL_generate = 15;
	int LITERAL_indexing = 16;
	int CHAR_LITERAL = 17;
	int NUM_INT = 18;
	int NUM_FLOAT = 19;
	int DOT = 20;
	int SEMI = 21;
	int COMMA = 22;
	int LPAREN = 23;
	int RPAREN = 24;
	int BECOMES = 25;
	int PLUS_ASSIGN = 26;
	int MINUS_ASSIGN = 27;
	int STAR_ASSIGN = 28;
	int DIV_ASSIGN = 29;
	int MOD_ASSIGN = 30;
	int SR_ASSIGN = 31;
	int BSR_ASSIGN = 32;
	int SL_ASSIGN = 33;
	int BAND_ASSIGN = 34;
	int BXOR_ASSIGN = 35;
	int BOR_ASSIGN = 36;
	int LOR = 37;
	int LAND = 38;
	int BOR = 39;
	int BXOR = 40;
	int BAND = 41;
	int NOT_EQUAL = 42;
	int EQUAL = 43;
	int LT_ = 44;
	int GT = 45;
	int LE = 46;
	int GE = 47;
	int SL = 48;
	int SR = 49;
	int BSR = 50;
	int PLUS = 51;
	int MINUS = 52;
	int STAR = 53;
	int DIV = 54;
	int MOD = 55;
	int INC = 56;
	int DEC = 57;
	int BNOT = 58;
	int LNOT = 59;
	int LITERAL_true = 60;
	int LITERAL_false = 61;
	int LITERAL_this = 62;
	int LITERAL_null = 63;
	int QUESTION = 64;
	int LCURLY = 65;
	int RCURLY = 66;
	int TOK_ARROW = 67;
	int ANNOT = 68;
	int WS = 69;
	int SL_COMMENT = 70;
	int ML_COMMENT = 71;
	int ESC = 72;
	int HEX_DIGIT = 73;
	int VOCAB = 74;
	int EXPONENT = 75;
	int FLOAT_SUFFIX = 76;
}
